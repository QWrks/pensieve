% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psOpenSort.R
\name{psOpenSort}
\alias{psOpenSort}
\alias{as_psOpenSort}
\alias{as_psOpenSort.matrix}
\alias{as_psOpenSort.data.frame}
\alias{tidy.psOpenSort}
\alias{autoplot.psOpenSort}
\alias{summary.psOpenSort}
\title{psOpenSort Store \emph{individual} sort and dimension description by \emph{one} participant.}
\usage{
psOpenSort(osort, descriptions = NULL)

as_psOpenSort(osort, descriptions = NULL)

\method{as_psOpenSort}{matrix}(osort, descriptions = NULL)

\method{as_psOpenSort}{data.frame}(osort, descriptions = NULL)

\method{tidy}{psOpenSort}(x)

\method{autoplot}{psOpenSort}(object, edge_codings = NULL,
  str_wrap_width = 30)

\method{summary}{psOpenSort}(object, ...)
}
\arguments{
\item{osort}{a matrix with items as rows, open dimensions as columns, and open sort value in cells.
Matrix must be either
\itemize{
\item \code{logical} for \emph{nominal}-scaled sort, where an open dimension applies (\code{TRUE}) or does not apply (\code{FALSE}),
\item \code{integer} for \emph{ordinally}-scaled sort, where an open dimension applies to some item \emph{more} (\code{2nd} rank) \emph{or less} (\code{3rd} rank) than to another other item,
\item \code{numeric} for \emph{interval} or \emph{ratio}-scaled sort, where an open dimension applies to some item \emph{by some amount more or less} (say \code{2.4} units) than to another item.
}

Currently only \code{logical} is allowed.

If rows are named (by item handles), names must be valid R names.

If columns are named, they must be valid R names and they must be the same as the names in \code{descriptions}.
Either way, \code{osort} and \code{descriptions} are always \emph{matched by index only}: the first column from \code{osort}, must be the first element of \code{description}, and so forth.}

\item{descriptions}{a character vector giving the open-ended dimension description provided by the participant.
Can be named.
Defaults to \code{NULL}, in which case no user-provided dimension descriptions are available (not recommended).}

\item{x}{a \link{psOpenSort}, created by \code{\link[=psOpenSort]{psOpenSort()}}.}

\item{object}{a \link{psOpenSort}, created by \code{\link[=psOpenSort]{psOpenSort()}}.}

\item{edge_codings}{a tibble with category description indeces in the first column, and arbitrary metadata \emph{about the descriptions} in limited later columns:
\itemize{
\item 2nd column will be mapped to line color,
\item 3rd column will be mapped to line type (and must be discrete).
Later columns will be ignored.
Useful if participants or researchers have coded the open-ended descriptions in some way.
Category description indeces must be a subset of the column names in \code{x}.
If more then one code applies to a category, multiple rows with identical categories can exist, and multiple, "fanned-out" edges will be drawn between the respective nodes.
See note.
Defaults to \code{NULL}.
}}

\item{str_wrap_width}{integer scalar, giving the maximum number of characters after which to insert a newline, passed on to \code{\link[stringr:str_wrap]{stringr::str_wrap()}}.
Defaults to \code{30}.
Useful for long descriptions.}

\item{...}{further arguments passed to methods.}
}
\value{
Object of class \code{psOpenSort}.
}
\description{
Constructs S3 class for pensieve.
}
\section{Methods (by generic)}{
\itemize{
\item \code{as_psOpenSort}: coerce matrix to psOpenSort

\item \code{as_psOpenSort}: coerce data.frame to psOpenSort
}}

\note{
To render the resulting \code{ggplot} object, you must \emph{manually} call \code{library(ggraph)} somewhere in your script (as per \href{https://github.com/thomasp85/ggraph/issues/85}{this limitation}).

If \code{codings} are added, the aesthetics are set \emph{for each individual \link{psOpenSort} separately}, which may make it hard to compare plots across participants.
To get consistent code aesthetics, consider applying \code{\link[ggraph:scale_edge_color_manual]{ggraph::scale_edge_color_manual()}} and friends.
}
\examples{
# create single open sort ====

# Lisas open sort, unnamed descriptions (matched by index)
osort <- matrix(
  data = c(TRUE, FALSE, FALSE, FALSE, TRUE, FALSE),
  nrow = 3,
  dimnames = list(items = c("cat", "dog", "cow")))
descriptions <- c(
  "a pet which largely takes care of itself",
  NA  # dimension is assigned, but not described (not a problem)
)
lisa <- psOpenSort(osort = osort, descriptions = descriptions)

# Peters open sort, named descriptions (*also* only matched by index)
osort <- matrix(
  data = c(TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE),
  nrow = 3,
  dimnames = list(
    items = c("cat", "dog", "cow"),
    categories = c("in_homes", "quiet", "herbivore")
  ))
descriptions <- c(
  in_homes = "Animal found in peoples homes.",
  quiet = "Does not make a lot of noise.",
  herbivore = "Eats plants.")  # defined, but never TRUE (not a problem)
peter <- psOpenSort(osort = osort, descriptions = descriptions)

# coercion methods
peter_m <- as_psOpenSort(osort = as.matrix(x = osort), descriptions = descriptions)
peter_df <- as_psOpenSort(osort = as.data.frame(x = osort), descriptions = descriptions)

# Rebeccas open sort, without any descriptions provided
osort <- matrix(
  data = c(FALSE, FALSE, TRUE, TRUE, TRUE, FALSE),
  nrow = 3,
  dimnames = list(handles = c("cat", "dog", "cow")))
rebecca <- psOpenSort(osort = osort, descriptions = NULL)
ggplot2::autoplot(object = lisa)
ggplot2::autoplot(object = rebecca)

# no with codes
petercodes <- tibble::tibble(category = c("in_homes", "in_homes", "quiet", "herbivore"),
                             reference = c("location", "human interaction", NA, "animal diet"),
                             length = c("medium", "medium", "medium", "short")
                             # notice the duplicates to allow for multiple codes
                             )
library(ggraph)  # must be attached while running below
ggplot2::autoplot(object = peter, edge_codings = petercodes)
summary(peter)

}
\seealso{
Other S3 classes from `pensieve`: \code{\link{QItemStrata}},
  \code{\link{QPreSorts}}, \code{\link{QSorts}},
  \code{\link{correlate}}, \code{\link{extract}},
  \code{\link{make_grid}}, \code{\link{psConcourse}},
  \code{\link{psItems}}, \code{\link{psOpenSorts}},
  \code{\link{psPeople}}, \code{\link{score}}
}
\concept{S3 classes from `pensieve`}
