% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correlation.R
\name{correlate}
\alias{correlate}
\alias{QCors}
\alias{check.QCors}
\alias{plot.QCors}
\title{Correlate Q Sorts.}
\usage{
correlate(sorts, method = "spearman", use = "pairwise.complete.obs")

QCors(cors, validate = TRUE)

\method{check}{QCors}(x)

\method{plot}{QCors}(x, summarize = NULL, n_obs = NULL, use_js = NULL,
  ...)
}
\arguments{
\item{sorts}{An integer array with item handles as first dimension, people as second dimension, arbitrary dimensions thereafter, and item positions in cells.
Dimensions must be named.}

\item{method}{A character string indicating which correlation coeffocient to use.
Must be \code{"pearson"}, \code{"kendall"} or \code{"spearman"} (recommended default).}

\item{use}{A character string giving a method for computing covariances in the presence of missing data.
Must be \code{"everything"}, \code{"all.obs"},, \code{"complete.obs"}, \code{"na.or.complete"} or \code{"pairwise.complete.obs"} (recommended default).
For more information, see \code{\link[stats:cor]{stats::cor()}}}

\item{cors}{A numerical matrix with correlations.}

\item{validate}{a logical flag, indicating whether the object will be validated on construction.
Defaults to `TRUE`.}

\item{x}{class object created by respective constructor function.}

\item{summarize}{A logical flag, indicating whether the object should be summarized before plotting.
If \code{TRUE}, a plot with a density estimate of individual data points is returned, suitable for medium to large objects (numbers of people-variables).
If \code{FALSE}, a plot with individual data points is returned, suitable for small to medium-sized objects (numbers of people-variables).

Defaults to \code{NULL}, in which case the appropriate plot is inferred from the size.}

\item{n_obs}{Integer scalar, giving the number of observations (here: items), on which the correlations are based.
Defaults to \code{NULL}.
If given, \code{type = density} includes a density estimate for Pearson's $r$ in random data.}

\item{use_js}{A logical flag, indicating whether an interactive, java-script variant of the plot should be returned.
Defaults to `NULL`, in which case the appropriate output is inferred from the runtime environment.}

\item{...}{Arguments passed onto other methods.
Not currently used.}
}
\description{
Wraps \code{stats::cor} to calculate correlation coefficients.

Construct S3 class for pensieve.

Check S3 class.

Plot S3 class.
}
\details{
`check()`, `test()`, `assert()` and `expect()` are extensions the family of functions from the [checkmate](https://github.com/mllg/checkmate) package.
`check()` returns `TRUE` or the error message, `assert()` only returns a message in case of an error, `test()` returns `TRUE` or `FALSE`.
`expect()` is for internal use with testing via [`testthat`](https://github.com/hadley/testthat)).
`need()` returns `NULL` or the error message and is for interal use with the accio web frontend inside [shiny::validate()].
}
\section{Methods (by generic)}{
\itemize{
\item \code{check}: validation

\item \code{plot}: plotting
}}

\examples{
# this just runs the calculations, but also classes and validates the results
cors <- correlate(sorts = civicon_2014$qData$sorts[,,"before"])
# this just assigns the class, without validation (not recommended)
cors <- QCors(cors = cors, validate = FALSE)
# create checkable object
x <- QItemConcourse(
  concourse = matrix(
    data = c(
      "Man lives to work.", "Man lebt, um zu arbeiten.",
      "Man works to live.", "Man arbeitet, um zu leben."
    ),
    nrow = 2, ncol = 2,
    dimnames = list(
      items = c("live_2_work", "work_2_live"),
      languages = c("english", "ngerman")  # ideally, these are valid babel languages
    )
  )
)

# check object and friends ...
check(x)  # returns TRUE or error message
test(x)  # returns TRUE or FALSE
assert(x)  # returns error or silently object
need(x)  # returns NULL or error message
# this validates the class
check(cors)
# makes a heatmap
plot(x = cors, use_js = NULL, type = "heatmap", n_obs = NULL)

# makes density estimate
plot(x = cors, use_js = NULL, type = "density", n_obs = nrow(civicon_2014$qData$sorts[,,"before"]))

}
\seealso{
Other analysis functions: \code{\link{extract}},
  \code{\link{score}}

Other S3 classes from `pensieve`: \code{\link{PeopleInfo}},
  \code{\link{QItemConcourse}}, \code{\link{QItemStrata}},
  \code{\link{QPreSorts}}, \code{\link{QSorts}},
  \code{\link{extract}}, \code{\link{make_grid}},
  \code{\link{score}}

Other validation functions: \code{\link{QItemConcourse}},
  \code{\link{QSorts}}, \code{\link{check}},
  \code{\link{extract}}, \code{\link{make_grid}},
  \code{\link{score}}

Other plotting functions: \code{\link{QSorts}},
  \code{\link{extract}},
  \code{\link{knit_print.QItemConcourse}}
}
