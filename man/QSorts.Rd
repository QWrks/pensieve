% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sorts.R
\name{QSorts}
\alias{QSorts}
\alias{check.QSorts}
\alias{plot.QSorts}
\title{Check and make QSorts}
\usage{
QSorts(sorts, validate = TRUE)

\method{check}{QSorts}(x)

\method{plot}{QSorts}(x, column = 1, use_js = NULL, ...)
}
\arguments{
\item{sorts}{An integer array with item handles as first dimension, people as second dimension, arbitrary dimensions thereafter, and item positions in cells.
Dimensions must be named.}

\item{validate}{a logical flag, indicating whether the object will be validated on construction.
Defaults to `TRUE`.}

\item{x}{class object created by respective constructor function.}

\item{column}{Positive integer scalar, giving the column of the QSorts object to plot.
Defaults to \code{1}, in which case the first column is plotted.}

\item{use_js}{A logical flag, indicating whether an interactive, java-script variant of the plot should be returned.
Defaults to `NULL`, in which case the appropriate output is inferred from the runtime environment.}

\item{...}{Arguments passed onto other methods.
Not currently used.}
}
\description{
Checks and makes QSorts

Construct S3 class for pensieve.

Check S3 class.

Plot S3 class.
}
\details{
`check()`, `test()`, `assert()` and `expect()` are extensions the family of functions from the [checkmate](https://github.com/mllg/checkmate) package.
`check()` returns `TRUE` or the error message, `assert()` only returns a message in case of an error, `test()` returns `TRUE` or `FALSE`.
`expect()` is for internal use with testing via [`testthat`](https://github.com/hadley/testthat)).
`need()` returns `NULL` or the error message and is for interal use with the accio web frontend inside [shiny::validate()].
}
\section{Methods (by generic)}{
\itemize{
\item \code{check}: validation

\item \code{plot}: plotting
}}

\examples{
# create checkable object
x <- QItemConcourse(
  concourse = matrix(
    data = c(
      "Man lives to work.", "Man lebt, um zu arbeiten.",
      "Man works to live.", "Man arbeitet, um zu leben."
    ),
    nrow = 2, ncol = 2,
    dimnames = list(
      items = c("live_2_work", "work_2_live"),
      languages = c("english", "ngerman")  # ideally, these are valid babel languages
    )
  )
)

# check object and friends ...
check(x)  # returns TRUE or error message
test(x)  # returns TRUE or FALSE
assert(x)  # returns error or silently object
need(x)  # returns NULL or error message
sorts <- civicon_2014$qData$sorts[,,"before"]
sorts <- QSorts(sorts = sorts, validate = FALSE)
check(x = sorts)
plot(x = sorts)
}
\seealso{
Other S3 classes from `pensieve`: \code{\link{PeopleInfo}},
  \code{\link{QItemConcourse}}, \code{\link{QItemStrata}},
  \code{\link{QPreSorts}}, \code{\link{correlate}},
  \code{\link{extract}}, \code{\link{make_grid}},
  \code{\link{score}}

Other import helpers: \code{\link{PeopleInfo}},
  \code{\link{QItemStrata}}, \code{\link{QPreSorts}},
  \code{\link{anonymize}}

Other validation functions: \code{\link{QItemConcourse}},
  \code{\link{check}}, \code{\link{correlate}},
  \code{\link{extract}}, \code{\link{make_grid}},
  \code{\link{score}}

Other plotting functions: \code{\link{correlate}},
  \code{\link{extract}},
  \code{\link{knit_print.QItemConcourse}}
}
