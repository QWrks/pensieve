% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/items.R
\name{QItemConcourse}
\alias{QItemConcourse}
\alias{check.QItemConcourse}
\title{Check and make QItemConcourse}
\usage{
QItemConcourse(concourse, validate = TRUE)

\method{check}{QItemConcourse}(x)
}
\arguments{
\item{concourse}{a character matrix of \strong{full items}, with named rows as item handles and named columns as languages.
Cells can be \code{NA} when full items are not available.
Full items must be unique by columns.}

\item{validate}{a logical flag, indicating whether the object will be validated on construction.
Defaults to `TRUE`.}

\item{x}{class object created by respective constructor function.}
}
\description{
Construct S3 class for pensieve.

Check S3 class.
}
\details{
`check()`, `test()`, `assert()` and `expect()` are extensions the family of functions from the [checkmate](https://github.com/mllg/checkmate) package.
`check()` returns `TRUE` or the error message, `assert()` only returns a message in case of an error, `test()` returns `TRUE` or `FALSE`.
`expect()` is for internal use with testing via [`testthat`](https://github.com/hadley/testthat)).
`need()` returns `NULL` or the error message and is for interal use with the accio web frontend inside [shiny::validate()].
}
\section{Methods (by generic)}{
\itemize{
\item \code{check}: Check QItemConcourse
}}

\examples{
x <- QItemConcourse(
  concourse = matrix(
    data = c(
      "Man lives to work.", "Man lebt, um zu arbeiten.",
      "Man works to live.", "Man arbeitet, um zu leben."
    ),
    nrow = 2, ncol = 2,
    dimnames = list(
      items = c("live_2_work", "work_2_live"),
      languages = c("english", "ngerman")  # ideally, these are valid babel languages
    )
  )
)

# create checkable object
x <- QItemConcourse(
  concourse = matrix(
    data = c(
      "Man lives to work.", "Man lebt, um zu arbeiten.",
      "Man works to live.", "Man arbeitet, um zu leben."
    ),
    nrow = 2, ncol = 2,
    dimnames = list(
      items = c("live_2_work", "work_2_live"),
      languages = c("english", "ngerman")  # ideally, these are valid babel languages
    )
  )
)

# check object and friends ...
check(x)  # returns TRUE or error message
test(x)  # returns TRUE or FALSE
assert(x)  # returns error or silently object
need(x)  # returns NULL or error message
}
\seealso{
Other S3 classes from `pensieve`: \code{\link{QItemStrata}},
  \code{\link{QPeopleFeatures}}, \code{\link{QPreSorts}},
  \code{\link{QSorts}}, \code{\link{correlate}},
  \code{\link{extract}}, \code{\link{make_grid}},
  \code{\link{score}}

Other validation functions: \code{\link{QSorts}},
  \code{\link{check}}, \code{\link{correlate}},
  \code{\link{extract}}, \code{\link{make_grid}},
  \code{\link{score}}
}
