% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checks.R, R/items.R, R/people.R, R/sorts.R
\name{check}
\alias{check}
\alias{test}
\alias{test.default}
\alias{expect}
\alias{expect.default}
\alias{assert}
\alias{assert.default}
\alias{need}
\alias{need.default}
\alias{check.QItemStrata}
\alias{check.PeopleInfo}
\alias{check.QPreSorts}
\title{Validate S3 classes from this package.}
\usage{
check(x)

test(x)

\method{test}{default}(x)

expect(x, info = NULL, label = NULL)

\method{expect}{default}(x, info = NULL, label = paste(class(x),
  "S3 class"))

assert(x, collection = NULL, var.name = NULL)

\method{assert}{default}(x, collection = NULL, var.name = paste(class(x)[1],
  "S3 class"))

need(x, label = NULL)

\method{need}{default}(x, label = NULL)

\method{check}{QItemStrata}(x)

\method{check}{PeopleInfo}(x)

\method{check}{QPreSorts}(x)
}
\arguments{
\item{x}{class object created by respective constructor function.}

\item{info}{[\code{character(1)}]\cr
See \code{\link[testthat]{expect_that}}}

\item{label}{[\code{character(1)}]\cr
See \code{\link[testthat]{expect_that}}}

\item{collection}{[\code{\link{AssertCollection}}]\cr
If an \code{\link{AssertCollection}} is provided, the error message is stored
in it. If \code{NULL}, an exception is raised if \code{res} is not
\code{TRUE}.}

\item{var.name}{[\code{character(1)}]\cr
The custom name for \code{x} as passed to any \code{assert*} function.
Defaults to a heuristic name lookup.}
}
\description{
Use \code{check()}, \code{test()}, \code{assert()}, \code{expect()} and \code{need()} to validate  classed objects from this package.

Check S3 class.
}
\details{
`check()`, `test()`, `assert()` and `expect()` are extensions the family of functions from the [checkmate](https://github.com/mllg/checkmate) package.
`check()` returns `TRUE` or the error message, `assert()` only returns a message in case of an error, `test()` returns `TRUE` or `FALSE`.
`expect()` is for internal use with testing via [`testthat`](https://github.com/hadley/testthat)).
`need()` returns `NULL` or the error message and is for interal use with the accio web frontend inside [shiny::validate()].
}
\examples{
# create checkable object
x <- QItemConcourse(
  concourse = matrix(
    data = c(
      "Man lives to work.", "Man lebt, um zu arbeiten.",
      "Man works to live.", "Man arbeitet, um zu leben."
    ),
    nrow = 2, ncol = 2,
    dimnames = list(
      items = c("live_2_work", "work_2_live"),
      languages = c("english", "ngerman")  # ideally, these are valid babel languages
    )
  )
)

# check object and friends ...
check(x)  # returns TRUE or error message
test(x)  # returns TRUE or FALSE
assert(x)  # returns error or silently object
need(x)  # returns NULL or error message
}
\seealso{
Other validation functions: \code{\link{QItemConcourse}},
  \code{\link{QSorts}}, \code{\link{correlate}},
  \code{\link{extract}}, \code{\link{make_grid}},
  \code{\link{score}}
}
