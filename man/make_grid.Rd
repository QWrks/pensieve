% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/design.R
\name{make_grid}
\alias{make_grid}
\alias{QGrid}
\alias{check.QGrid}
\title{Create Q sorting grid.}
\usage{
make_grid(x_range = c(-5, 5), y_range = c(1, 5), pattern = "honeycomb",
  offset = "odd")

QGrid(grid, pattern = "honeycomb", offset = "even", validate = TRUE)

\method{check}{QGrid}(x)
}
\arguments{
\item{x_range}{An integer vector of length two, giving the range on the x axis.
Defaults to \code{c(-5, 5)}.}

\item{y_range}{An integer vector of length two, giving the range on the y axis.
Defaults to \code{c(1, 5)}.}

\item{pattern}{A character string, giving the pattern of tesselation to use.
Must be \code{"honeycomb"} (default), the only currently supported pattern.
Defaults to \code{NULL}, in which case \code{pattern} is expected as an attribute of \code{grid}.}

\item{offset}{A character string, giving the rows to be offset.
Must be \code{"even"} or \code{"odd"} (default).
Applies only to \code{"honeycomb"} and \code{"brickwall"} patterns.}

\item{grid}{A logical matrix giving the available cells for Q sorting.}

\item{validate}{a logical flag, indicating whether the object will be validated on construction.
Defaults to `TRUE`.}

\item{x}{class object created by respective constructor function.}
}
\description{
Creates a grid for Q sorting.

Construct S3 class for pensieve.

Check S3 class.
}
\details{
`check()`, `test()`, `assert()` and `expect()` are extensions the family of functions from the [checkmate](https://github.com/mllg/checkmate) package.
`check()` returns `TRUE` or the error message, `assert()` only returns a message in case of an error, `test()` returns `TRUE` or `FALSE`.
`expect()` is for internal use with testing via [`testthat`](https://github.com/hadley/testthat)).
`need()` returns `NULL` or the error message and is for interal use with the accio web frontend inside [shiny::validate()].
}
\section{Methods (by generic)}{
\itemize{
\item \code{check}: validation
}}

\examples{
# this makes the grid, already assigns class
grid <- make_grid(x_range = c(-5, 5), y_range = c(1,5), pattern = "honeycomb", offset = "odd")
# make simple matrix by hand
m <- matrix(data = c(TRUE, FALSE, FALSE, TRUE), nrow = 2, ncol = 2)
# assign class, without validation (not recommended)
grid <- QGrid(grid = m, pattern = "honeycomb", offset = "even", validate = FALSE)
# create checkable object
x <- ItemConcourse(
  concourse = matrix(
    data = c(
      "Man lives to work.", "Man lebt, um zu arbeiten.",
      "Man works to live.", "Man arbeitet, um zu leben."
    ),
    nrow = 2, ncol = 2,
    dimnames = list(
      items = c("live_2_work", "work_2_live"),
      languages = c("english", "ngerman")  # ideally, these are valid babel languages
    )
  )
)

# check object and friends ...
check(x)  # returns TRUE or error message
test(x)  # returns TRUE or FALSE
assert(x)  # returns error or silently object
need(x)  # returns NULL or error message
# validate the class
check(grid)
}
\seealso{
Other S3 classes from `pensieve`: \code{\link{ItemConcourse}},
  \code{\link{PeopleInfo}}, \code{\link{QItemStrata}},
  \code{\link{QPreSorts}}, \code{\link{QSorts}},
  \code{\link{correlate}}, \code{\link{extract}},
  \code{\link{score}}

Other validation functions: \code{\link{ItemConcourse}},
  \code{\link{QSorts}}, \code{\link{check}},
  \code{\link{correlate}}, \code{\link{extract}},
  \code{\link{score}}
}
