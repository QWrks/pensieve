% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psItemContent.R
\name{psItemContent}
\alias{psItemContent}
\alias{validate_S3.psItemContent}
\title{Store item content as character strings}
\usage{
psItemContent(items, dir_bin = NULL, lang = NULL, paperwidth = 8.5,
  paperheight = 5.4, top = 0.5, bottom = 0.5, left = 0.5,
  right = 0.5, unit = "cm", vcentering = TRUE, hcentering = TRUE,
  alignment = "justified")

\method{validate_S3}{psItemContent}(x, ps_coll = NULL, ...)
}
\arguments{
\item{items}{\code{[character()]} giving the \emph{participant-facing} \strong{item content}.
Can be named to provide short, \emph{researcher-facing} \strong{item handles}.
\itemize{
\item if \code{dir_bin} is \code{NULL} (default), \code{items} must be text.
Items can be marked up using \href{https://rmarkdown.rstudio.com/authoring_pandoc_markdown.html}{Pandoc Markdown}.
An additional subclass \code{psItemContentText} is prepended and validated.
\item if \code{dir_bin} is given, \code{items} must be file paths, relative from \code{dir_bin}.
An additional subclass \code{psItemContentBin`` is prepended and validated.}lang\code{and}alignment` are ignored.
}}

\item{dir_bin}{\code{[character(1)]} giving the root from which \code{items} can be found, when \code{items} are paths.
Defaults to \code{NULL}, in which case \code{items} are expected to be texts.
Must be relative path \emph{from the working directory}.
Best constructed with \code{\link[base:file.path]{base::file.path()}}.}

\item{lang}{\code{[character(1)]} giving a \href{https://tools.ietf.org/html/bcp47}{valid BCP 47 language code} code, such as \code{en_US}.

Must be one of:
\itemize{
\item \code{NULL} in which case there is no multilingual support (\strong{default})
\item \code{'ar-DZ'} for \emph{arabic (Algeria)}
\item \code{'ar-IQ'} for \emph{arabic (Iraq)}
\item \code{'ar-JO'} for \emph{arabic (Jordan)}
\item \code{'ar-LB'} for \emph{arabic (Lebanon)}
\item \code{'ar-LY'} for \emph{arabic (Libya)}
\item \code{'ar-MA'} for \emph{arabic (Morocco)}
\item \code{'ar-MR'} for \emph{arabic (Mauritania)}
\item \code{'ar-PS'} for \emph{arabic (Palestinian Territory)}
\item \code{'ar-SY'} for \emph{arabic (Syria)}
\item \code{'ar-TN'} for \emph{arabic (Tunisia)}
\item \code{'de-DE'} for \emph{german}
\item \code{'de-AT'} for \emph{german (Austria)}
\item \code{'de-CH'} for \emph{german (Switzerland)}
\item \code{'dsb'} for \emph{lower sorbian}
\item \code{'hsb'} for \emph{upper sorbian}
\item \code{'el-polyton'} for \emph{greek (polytonic)}
\item \code{'en-AU'} for \emph{english (Australia)}
\item \code{'en-CA'} for \emph{english (Canada)}
\item \code{'en-GB'} for \emph{english (Great Britain)}
\item \code{'en-NZ'} for \emph{english (New Zealand)}
\item \code{'en-UK'} for \emph{english (United Kingdom)}
\item \code{'en-US'} for \emph{english (United States)}
\item \code{'grc-ancient'} for \emph{greek (ancient)}
\item \code{'la'} for \emph{latin}
\item \code{'sl'} for \emph{slovenian}
\item \code{'fr-CA'} for \emph{french (Canada)}
\item \code{'pt-BR'} for \emph{portoguese (Brazil)}
\item \code{'af'} for \emph{afrikaans}
\item \code{'am'} for \emph{amharic}
\item \code{'ar'} for \emph{arabic}
\item \code{'as'} for \emph{assamese}
\item \code{'ast'} for \emph{asturian}
\item \code{'bg'} for \emph{bulgarian}
\item \code{'bn'} for \emph{bengali}
\item \code{'bo'} for \emph{tibetan}
\item \code{'br'} for \emph{breton}
\item \code{'ca'} for \emph{catalan}
\item \code{'cy'} for \emph{welsh}
\item \code{'cs'} for \emph{czech}
\item \code{'cop'} for \emph{coptic}
\item \code{'da'} for \emph{danish}
\item \code{'dv'} for \emph{divehi}
\item \code{'el'} for \emph{greek}
\item \code{'en'} for \emph{english}
\item \code{'eo'} for \emph{esperanto}
\item \code{'es'} for \emph{spanish}
\item \code{'et'} for \emph{estonian}
\item \code{'eu'} for \emph{basque}
\item \code{'fa'} for \emph{farsi}
\item \code{'fr'} for \emph{french}
\item \code{'fur'} for \emph{friulan}
\item \code{'ga'} for \emph{irish}
\item \code{'gd'} for \emph{scottish}
\item \code{'gez'} for \emph{ethiopic}
\item \code{'gl'} for \emph{galician}
\item \code{'he'} for \emph{hebrew}
\item \code{'hi'} for \emph{hindi}
\item \code{'hr'} for \emph{croatian}
\item \code{'hu'} for \emph{magyar}
\item \code{'hy'} for \emph{armenian}
\item \code{'ia'} for \emph{interlingua}
\item \code{'id'} for \emph{indonesian}
\item \code{'is'} for \emph{icelandic}
\item \code{'it'} for \emph{italian}
\item \code{'km'} for \emph{khmer}
\item \code{'kmr'} for \emph{kurmanji}
\item \code{'kn'} for \emph{kannada}
\item \code{'ko'} for \emph{korean}
\item \code{'lo'} for \emph{lao}
\item \code{'lt'} for \emph{lithuanian}
\item \code{'lv'} for \emph{latvian}
\item \code{'ml'} for \emph{malayalam}
\item \code{'mn'} for \emph{mongolian}
\item \code{'mr'} for \emph{marathi}
\item \code{'nb'} for \emph{norsk}
\item \code{'nl'} for \emph{dutch}
\item \code{'nn'} for \emph{nynorsk}
\item \code{'no'} for \emph{norsk}
\item \code{'nqo'} for \emph{nko}
\item \code{'oc'} for \emph{occitan}
\item \code{'pa'} for \emph{panjabi}
\item \code{'pms'} for \emph{piedmontese}
\item \code{'pt'} for \emph{portoguese}
\item \code{'rm'} for \emph{romanian}
\item \code{'ro'} for \emph{russian}
\item \code{'sa'} for \emph{sanskrit}
\item \code{'se'} for \emph{samin}
\item \code{'sk'} for \emph{slovak}
\item \code{'sq'} for \emph{albanian}
\item \code{'sr'} for \emph{serbian}
\item \code{'syr'} for \emph{syriac}
\item \code{'ta'} for \emph{tamil}
\item \code{'te'} for \emph{telugu}
\item \code{'th'} for \emph{thai}
\item \code{'ti'} for \emph{ethiopic}
\item \code{'tk'} for \emph{turkmen}
\item \code{'tr'} for \emph{turkish}
\item \code{'uk'} for \emph{ukrainian}
\item \code{'ur'} for \emph{urdu} or
\item \code{'vi'} for \emph{vietnamese}
}

Used for multilingual typsetting support via \href{https://ctan.org/pkg/babel}{LaTeX's babel package} and others. \strong{Careful}: Depending on the local tex distribution, not all valid languages may also be supported by LaTeX. Use \code{\link[=check_latex_lang]{check_latex_lang()}} to verify.}

\item{paperwidth}{\code{[numeric(1)]} giving the width and height of documents in \code{unit}.
For good typographical results, should be as close as possible to the \emph{actual} physical measurements of documents encountered by users.
Defaults to \code{NULL}.}

\item{paperheight}{\code{[numeric(1)]} giving the width and height of documents in \code{unit}.
For good typographical results, should be as close as possible to the \emph{actual} physical measurements of documents encountered by users.
Defaults to \code{NULL}.}

\item{top}{\code{[numeric(1)]} giving the margin in \code{unit}.
Defaults to \code{NULL}.}

\item{bottom}{\code{[numeric(1)]} giving the margin in \code{unit}.
Defaults to \code{NULL}.}

\item{left}{\code{[numeric(1)]} giving the margin in \code{unit}.
Defaults to \code{NULL}.}

\item{right}{\code{[numeric(1)]} giving the margin in \code{unit}.
Defaults to \code{NULL}.}

\item{unit}{\code{[character(1)]} giving the units for the above dimensions.

Must be one of:
\itemize{
\item \code{'cm'} for \emph{metric} (\strong{default}) or
\item \code{'in'} for \emph{imperial}
}}

\item{vcentering}{\code{[logical(1)]} indicating whether content should be vertically/horizontally centered.
Defaults to \code{FALSE}.}

\item{hcentering}{\code{[logical(1)]} indicating whether content should be vertically/horizontally centered.
Defaults to \code{FALSE}.}

\item{alignment}{\code{[character(1)]} giving the alignment of the text.

Must be one of:
\itemize{
\item \code{'justified'} (\strong{default})
\item \code{'left'}
\item \code{'right'} or
\item \code{'center'}
}}

\item{x}{\code{[character()]} \emph{or} \code{[raw()]} giving the input.}

\item{ps_coll}{\code{\link{AssertCollection}} ps_coll error collection via \code{\link[checkmate:makeAssertCollection]{checkmate::makeAssertCollection()}}, for internal use.}

\item{...}{further arguments to be passed to methods.}
}
\value{
\code{[character()]} with class \code{\link{psItemContent}}.
}
\description{
Helper function to append and validate \code{\link{psItemContent}} class.
This class is used as a column class in \code{psItems}.`
}
\details{
Storing \strong{full items} can enable deployment and convenience functions, as well as enhance the presentation of results.
}
\section{Methods (by generic)}{
\itemize{
\item \code{validate_S3}: Validation
}}

\examples{
# text items with handles
items_text_en <- psItemContent(
  items = c(
    "live_2_work" = "Man lives to work.",
    "work_2_live" = "Man works to live."
  ),
  lang = "en-US"
)

# text items without handles
items_text_de <- psItemContent(
  items = c(
    "Man lebt um zu arbeiten.",
    "Man arbeitet, um zu leben."
  ),
  lang = "de-DE"
)

# text items without multilingual typographic support
items_text_esperanto <- psItemContent(
  items = c(
    "Viro vivas por labori.",
    "Viro laboras vivi."
  ),
  lang = NULL
)

# image items
# these images ship with pensieve
# location depends on runtime; ignore next three lines
dir_bin <- file.path("..", "..", "inst", "extdata", "fruit")
if (!dir.exists(dir_bin)) {
  dir_bin <- file.path(system.file(package = "pensieve"), "extdata", "fruit")
}
items_image <- psItemContent(
  items = c("peach.jpg", "pear.jpg"),
  dir_bin = dir_bin
)

# rendering text items ====
rendered_items <- render_items(items = items_text_en)


# supplying your own compiled LaTeX
by_hand_latex <- glue::glue(.open = "[", .close = "]", "
  \\\\documentclass{article}
  \\\\begin{document}

  Let's say this is an item.

  \\\\end{document}
")
from_by_hand_latex <- suppressMessages(render_items(
  items = "Let's say this is an item.",
  # full item wording should still be provided for other uses!
  tex = list(by_hand_latex)
))
}
\seealso{
Other S3 classes from `pensieve`: \code{\link{QPreSorts}},
  \code{\link{QSorts}}, \code{\link{correlate}},
  \code{\link{extract}}, \code{\link{psGrid}},
  \code{\link{psOpenSorts}}, \code{\link{psOpenSort}},
  \code{\link{psPeople}}, \code{\link{score}}
}
\concept{S3 classes from `pensieve`}
