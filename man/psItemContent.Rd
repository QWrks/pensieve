% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psItemContent.R
\name{psItemContent}
\alias{psItemContent}
\alias{validate_S3.psItemContent}
\title{Store item content as character strings}
\usage{
psItemContent(items, type = "text", lang = NULL, img_dir = NULL)

\method{validate_S3}{psItemContent}(x, ps_coll = NULL, ...)
}
\arguments{
\item{items}{\code{[character()]} giving the \emph{participant-facing} \strong{item content}.
Can be named to provide short, \emph{researcher-facing} \strong{item handles}.}

\item{type}{\code{[character(1)]} giving the \emph{kind} of item content, must be one of:
\itemize{
\item \code{"text"} (default) for textual item, in which case \code{items} must be text.
Items can be marked up using \href{https://rmarkdown.rstudio.com/authoring_pandoc_markdown.html}{Pandoc Markdown}.
An additional subclass \code{psItemContentText} is prepended and validated.
\item \code{"image"} for image items, in which case \code{items} must be file paths, relative from \code{img_dir}.
Images must be \code{*.png}, \code{*.jpg}, \code{*.jpeg} or \code{*.svg}.
An additional subclass \code{psItemContentImage`` is prepended and validated.}lang` is ignored.
}}

\item{lang}{\code{[character(1)]} giving a \href{https://tools.ietf.org/html/bcp47}{valid BCP 47 language code} code, such as \code{en_US}. Used for multilingual typsetting support via \href{https://ctan.org/pkg/babel}{LaTeX's babel package} and others.
Must be one of:
\itemize{
\item \code{'ar-DZ'}
\item \code{'ar-IQ'}
\item \code{'ar-JO'}
\item \code{'ar-LB'}
\item \code{'ar-LY'}
\item \code{'ar-MA'}
\item \code{'ar-MR'}
\item \code{'ar-PS'}
\item \code{'ar-SY'}
\item \code{'ar-TN'}
\item \code{'de-DE'}
\item \code{'de-AT'}
\item \code{'de-CH'}
\item \code{'dsb'}
\item \code{'hsb'}
\item \code{'el-polyton'}
\item \code{'en-AU'}
\item \code{'en-CA'}
\item \code{'en-GB'}
\item \code{'en-NZ'}
\item \code{'en-UK'}
\item \code{'en-US'}
\item \code{'grc-ancient'}
\item \code{'la'}
\item \code{'sl'}
\item \code{'fr-CA'}
\item \code{'pt-BR'}
\item \code{'sr'}
\item \code{'af'}
\item \code{'am'}
\item \code{'ar'}
\item \code{'as'}
\item \code{'ast'}
\item \code{'bg'}
\item \code{'bn'}
\item \code{'bo'}
\item \code{'br'}
\item \code{'ca'}
\item \code{'cy'}
\item \code{'cs'}
\item \code{'cop'}
\item \code{'da'}
\item \code{'dv'}
\item \code{'el'}
\item \code{'en'}
\item \code{'eo'}
\item \code{'es'}
\item \code{'et'}
\item \code{'eu'}
\item \code{'fa'}
\item \code{'fr'}
\item \code{'fur'}
\item \code{'ga'}
\item \code{'gd'}
\item \code{'gez'}
\item \code{'gl'}
\item \code{'he'}
\item \code{'hi'}
\item \code{'hr'}
\item \code{'hu'}
\item \code{'hy'}
\item \code{'ia'}
\item \code{'id'}
\item \code{'is'}
\item \code{'it'}
\item \code{'km'}
\item \code{'kmr'}
\item \code{'kn'}
\item \code{'ko'}
\item \code{'lo'}
\item \code{'lt'}
\item \code{'lv'}
\item \code{'ml'}
\item \code{'mn'}
\item \code{'mr'}
\item \code{'nb'}
\item \code{'nl'}
\item \code{'nn'}
\item \code{'no'}
\item \code{'nqo'}
\item \code{'oc'}
\item \code{'pa'}
\item \code{'pms'}
\item \code{'pt'}
\item \code{'rm'}
\item \code{'ro'}
\item \code{'sa'}
\item \code{'se'}
\item \code{'sk'}
\item \code{'sq'}
\item \code{'sr'}
\item \code{'syr'}
\item \code{'ta'}
\item \code{'te'}
\item \code{'th'}
\item \code{'ti'}
\item \code{'tk'}
\item \code{'tr'}
\item \code{'uk'}
\item \code{'ur'} or
\item \code{'vi'}
}

Defaults to \code{NULL}.}

\item{img_dir}{\code{[character(1)]} giving the directory for \code{type = "image"}s.
Defaults to \code{NULL}, in which case images are expected at the working directory root \code{\link[base:getwd]{base::getwd()}}.
Ignored unless \code{type = "image"}.
Must be relative path \emph{from the working directory}.
Best constructed with \code{\link[base:file.path]{base::file.path()}}.}

\item{x}{An object with one of the pensieve S3 classes.}

\item{ps_coll}{\code{\link{AssertCollection}} ps_coll error collection via \code{\link[checkmate:makeAssertCollection]{checkmate::makeAssertCollection()}}, for internal use.}

\item{...}{further arguments to be passed to methods.}
}
\value{
\code{[character()]} with class \code{\link{psItemContent}}.
}
\description{
Helper function to append and validate \code{\link{psItemContent}} class.
This class is used as a column class in \code{psItems}.`
}
\details{
Storing \strong{full items} can enable deployment and convenience functions, as well as enhance the presentation of results.
}
\section{Methods (by generic)}{
\itemize{
\item \code{validate_S3}: Validation
}}

\examples{
# text items with handles
items_text_en <- psItemContent(
  items = c(
    "live_2_work" = "Man lives to work.",
    "work_2_live" = "Man works to live."
  ),
  type = "text",
  lang = "en-US"
)

# text items without handles
items_text_de <- psItemContent(
  items = c(
    "Man lebt um zu arbeiten.",
    "Man arbeitet, um zu leben."
  ),
  lang = "de-DE"
)

# text items without multilingual typographic support
items_text_esperanto <- psItemContent(
  items = c(
    "Viro vivas por labori.",
    "Viro laboras vivi."
  ),
  lang = NULL
)

# image items
# these images ship with pensieve
# location depends on runtime; ignore next three lines
img_dir <- file.path("..", "..", "inst", "extdata", "fruit")
if (!dir.exists(img_dir)) {
  img_dir <- file.path(system.file(package = "pensieve"), "extdata", "fruit")
}
items_image <- psItemContent(
  items = c("peach.jpg", "pear.jpg"),
  type = "image",
  img_dir = img_dir
)

# rendering text items ====
rendered_items <- render_items(items = items_text_en, lang = "en-US")


# supplying your own compiled LaTeX
by_hand_latex <- glue::glue(.open = "[", .close = "]", "
  \\\\documentclass{article}
  \\\\begin{document}

  Let's say this is an item.

  \\\\end{document}
")
from_by_hand_latex <- render_items(
  items = "Let's say this is an item.",
  # full item wording should still be provided for other uses!
  tex = list(by_hand_latex)
)
}
\seealso{
Other S3 classes from `pensieve`: \code{\link{QPreSorts}},
  \code{\link{QSorts}}, \code{\link{correlate}},
  \code{\link{extract}}, \code{\link{psGrid}},
  \code{\link{psOpenSorts}}, \code{\link{psOpenSort}},
  \code{\link{psPeople}}, \code{\link{score}}
}
\concept{S3 classes from `pensieve`}
