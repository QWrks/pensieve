# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r

language: r

# matrix ====
r:
  - oldrel
  - release
  - devel
os:
  - linux
  - osx
node_js:
  - "lts/*"

matrix:
  fast_finish: true
  allow_failures:
    - r: devel

# general settings ====

warnings_are_errors: true

cache:
  packages: yes
  directories:
    - $HOME/bin

git:
  # accio submodule is used only for deploy, so skip generally
  submodules: false
  depth: 3

# these need not be in pensieve DESCRIPTION, but are still needed for deploy
# when mentioned here, they get cached
r_packages:
  - covr
  - pkgdown
  - rsconnect

notifications:
  email: false


# linux stuff ====

dist: trusty

sudo: false

addons:
  apt:
    packages:
      - pdf2svg
      - libudunits2-dev


# macOS stuff ====

disable_homebrew: false

brew_packages:
  - pandoc

# script is part of base travis R

jobs:
  include:
    - stage: deploy
      os: linux
      r: oldrel
      script:
        # run test coverage
        - Rscript -e 'covr::codecov()'

        # auth machine for github to get accio submodule
        - echo -e "machine github.com\n  login $GITHUB_PAT" >> ~/.netrc
        - git submodule update --init
        - R CMD INSTALL .

        # make website
        - Rscript -e 'pkgdown::build_site()'

        # repeated install is necessary, because packrat otherwise does not know where pensieve came from
        - Rscript -e "devtools::install_github(repo = 'maxheld83/pensieve', force = TRUE, ref = '${TRAVIS_BRANCH}')"

        # auth shiny
        - Rscript -e "rsconnect::setAccountInfo(name='maxheld83', token='${SHINYAPPS_TOKEN}', secret='${SHINYAPPS_SECRET}')"

      deploy:
        # accio
        - provider: script
          script:
          - Rscript -e "rsconnect::deployApp(appDir = 'inst/accio/', appName = 'accio')"
          skip_cleanup: true
          on:
          branch: master
        - provider: script
          script:
            - Rscript -e "rsconnect::deployApp(appDir = 'inst/accio/', appName = 'accio-${TRAVIS_BRANCH}')"
          skip_cleanup: true
          on:
            all_branches: true
            condition: "$TRAVIS_BRANCH != master"

        # site
        - provider: script
          script:
            - echo "foo"
            - npm install netlify-cli -g
            - echo "bar"
            - netlify deploy -s pensieve.netlify.com -t ${NETLIFY_PAT} -e production
          skip_cleanup: true
          on:
            branch: master
        - provider: pages
          github_token: $GITHUB_PAT
          local_dir: docs/
          skip_cleanup: true
          on:
            branch: dev
